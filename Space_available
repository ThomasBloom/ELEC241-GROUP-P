--------------------------------------------
--========================================--
--= Space Available looks at the buffer  =--
--=  and sees how full it is. The space  =--
--=    that remains is output into an    =--
--=  integer, which is then sent to MCU  =--
--========================================--
--------------------------------------------
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;


entity SPACE_AVAILABLE is
	port
	(
		-- Input ports
		clk	   : in  std_logic; -- INPUt ADC clock
		spi_data : in  integer range 7 downto 0; -- SPI interface, set to 5 to read from register
		data_in  : in  std_logic_vector (3	downto 0); -- space_remains in from buffer

		-- Output port
		data_out	  : out std_logic_vector (3 downto 0) -- Data out is 8 - space_remains

	);
end entity;

architecture SPACE_AVAILABLE_arch of SPACE_AVAILABLE is
shared variable datainInt		 : integer range 8 downto 0 := 0; -- Create an integer to store the value of converted data in
begin
	process (clk)
	begin
		if rising_edge(clk) then -- on rising clock edge
			if(spi_data = 5) then -- If SPI input is 5
				datainInt := to_integer(unsigned(data_in)); -- Convert Data_in into an integer so math can be done on it
				datainInt := 8 - datainInt; -- 8 - Data_in
				data_out <= std_logic_vector(to_unsigned(datainInt, 4)); -- Convert data_in_Integer into a std_logic_vector to send to a shift register to communicate with the MCU.
			end if;
		end if;
	end process;
end SPACE_AVAILABLE_arch;
