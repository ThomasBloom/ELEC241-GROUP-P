library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity shift_register_space_available is
	port
	(
		-- Input ports
		CLK	: in  std_logic;
		DATAIN	: in  std_logic_vector(3 downto 0);
		spi_data : in  integer range 7 downto 0; 
		DATAOUT	: out std_logic
	);
end entity;

architecture shift_register_space_available_arch of shift_register_space_available is

type OUTPUTarray is array (3 downto 0) of std_logic;
shared variable OUTPUTarray_bus : OUTPUTarray;
shared variable counter : integer range 4 downto 0 := 4;
shared variable nomoresample : std_logic := '0';

begin
	process (CLK)
	begin
		if rising_edge(clk) then 
			if (spi_data = 1) then
				if (nomoresample = '0') then
					nomoresample := '1';
					for I in 0 to 3 loop
						OUTPUTarray_bus(I) := DATAIN(I);
					end loop;
				end if;
			
				DATAOUT <= OUTPUTarray_bus(counter-1);
				counter := counter - 1;
				if (counter = 0) then
					OUTPUTarray_bus := (others => '0');
					nomoresample := '0';
					counter := 4;
				end if;
			end if;
		end if;
	end process;

end shift_register_space_available_arch;
